%{
	@file: PD_2025_08_24_a.m
	@brief: Visualize the posterior shadow of data 2025-04-13-b and perform basic analysis.

	@author: madpang
	@date: [created: 2025-08-24, updated: 2025-08-27]
%}

% --- Workspace ---
% @note: Assuming directory structure -- `<workspace-name>/src/<this-script>.m`
ws = fileparts(fileparts(mfilename('fullpath')));
wsPath = genpath(ws);
addpath(wsPath);
inputDir = fullfile(ws, 'data', '2025-04-13-b');
if ~isfolder(inputDir)
	error('Input directory does not exist: %s', inputDir);
end

gridNum = 512;
gridSz = 232./gridNum; % [mm]
gridPos = RegularGrid( ...
	gridSz .* [1, 1], ...
	gridNum .* [1, 1], ...
	[0, 0] ...
);

% --- @todo ---

rxApSz = 610;

ii = 161;

fhIdx = fopen( ...
	fullfile( ...
		inputDir, ...
		['roiIdx', '-', num2str(ii, '%03d'), '.bin'] ...
	), ...
	'r' ...
);

roiIdx = logical(fread(fhIdx, inf, 'logical'));

fclose(fhIdx);

fhRcv = fopen( ...
	fullfile( ...
		inputDir, ...
		['rcvLvl', '-', num2str(ii, '%03d'), '.bin'] ...
	), ...
	'r' ...
);

rcvLvl = reshape(fread(fhRcv, inf, 'single'), [], rxApSz);
fclose(fhRcv);

summedSigMap = NaN(gridNum, gridNum);
summedSigMap(roiIdx) = 20 .* log10(sum(10.^(rcvLvl ./10), 2) ./ 0.218);

hF = showMap( ...
	summedSigMap, ...
	[-120, 0], ...
	[transpose(gridPos([1, end], 1)), transpose(gridPos([1, end], 2))] ...
);

% --- Clean up ---
rmpath(wsPath);

% === Local function{s}
%{
	@brief: Visualize the summed signal level map.

	@param[out]:
	- hF: figure handle
	@param[in]:
	- summedSigMap: matrix data to be visualized
	- dataRange: range of data values for visualization, [min, max]
	- xyRange: [xRange, yRange] for the image display
	- optTitle: optional title for the figure

	@note:
	- This function depends on createFigure.m
%}
function hF = showMap(summedSigMap, dataRange, xyRange, optTitle)
	% --- Figure parameters
	sizeUnit = 64;
	marginSize = [2, 1];
	axesSize = [8, 8, 0.25, 8]; % each two set an axes (width, height)
	kerfSize = 0.5;
	realAssetSize = [axesSize(1) + axesSize(3) + kerfSize, max(axesSize(2), axesSize(4))]; % [width, height]

	% --- Data parameters
	colorMap = parula(256);
	if nargin < 4
		optTitle = 'Summed signal level map across RX aperture';
	end
	figTitle = optTitle;
	mainFontSize = 14;
	titleFontSize = mainFontSize + 2;
	colorBarFontSize = mainFontSize - 2;

	% --- Visualization
	% Create figure
	hF = createFigure(sizeUnit, realAssetSize, marginSize);

	% Create axes
	hA = axes( ...
		hF, ...
		'NextPlot', 'replace', ...
		'Units', 'pixels', ...
		'Position', [marginSize(1), marginSize(2), axesSize(1), axesSize(2)] .* sizeUnit, ...
		'FontName', 'Times', ...
		'FontWeight', 'normal', ...
		'FontSize', mainFontSize, ...
		'Colormap', colorMap, ...
		'DataAspectRatioMode', 'auto', ...
		'PlotBoxAspectRatioMode', 'auto', ...
		'XLimMode', 'auto', 'YLimMode', 'auto', 'ZLimMode',  'auto', ...
		'XLimitMethod', 'tight', 'YLimitMethod', 'tight', 'ZLimitMethod', 'tight', ...
		'TickDir', 'none' ...
	);
	% Display the image
	imagesc( ...
		hA, ...
		'XData', xyRange(1:2), ...
		'YData', xyRange(3:4), ...
		'CData', summedSigMap, ...
		dataRange ... % clims
	);
	xlim(hA, 'auto');
	ylim(hA, 'auto');
	xlabel( ...
		hA, ...
		'X-axis range [mm]', ...
		'FontSize', mainFontSize ...
	);
	ylabel( ...
		hA, ...
		'Y-axis range [mm]', ...
		'FontSize', mainFontSize ...
	);
	title( ...
		hA, ...
		figTitle, ...
		'FontWeight', 'bold', ...
		'Interpreter', 'none', ...
		'FontSize', titleFontSize ...
	);

	% Create colorbar (manually)
	hCB = axes( ...
		hF, ...
		'Units', 'pixels', ...
		'Position', [marginSize(1) + axesSize(1) + kerfSize, marginSize(2), axesSize(3), axesSize(4)] .* sizeUnit, ...
		'FontName', 'Times', ...
		'FontWeight', 'normal', ...	
		'FontSize', colorBarFontSize, ...
		'Colormap', colorMap, ...
		'DataAspectRatioMode', 'auto', ...
		'PlotBoxAspectRatioMode', 'auto', ...
		'XLimMode', 'auto', 'YLimMode', 'auto', 'ZLimMode',  'auto', ...
		'XLimitMethod', 'tight', 'YLimitMethod', 'tight', 'ZLimitMethod', 'tight', ...
		'TickDir', 'none', ...
		'XTick', [], ...
		'YAxisLocation', 'right' ...
	);
	image( ...
		hCB, ...
		'XData', [0, 1], ...
		'YData', dataRange, ...
		'CData', transpose(uint8(0 : 1 : 255)) ...
	);
	ylabel( ...
		hCB, ...
		'Normalized Amplitude [dB]', ...
		'FontSize', colorBarFontSize ...
	);
end
